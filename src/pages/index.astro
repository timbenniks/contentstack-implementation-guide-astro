---
import Layout from "../layouts/Layout.astro";
import { getPage } from "../lib/contentstack";

const params = Astro.url.searchParams;
const live_preview = params.get("live_preview") || "";
const content_type_uid = params.get("content_type_uid") || "page";
const entry_uid = params.get("entry_uid") || "blte55cf3411ecaee0e";
const page = await getPage(live_preview, content_type_uid, entry_uid);
---

<script>
  import ContentstackLivePreview from "@contentstack/live-preview-utils";

  const apiKey = "blte766efb491f96715";
  const deliveryToken = "cs620decb0e6bb175e31210ce9";
  const environment = "preview";
  const region = "eu";
  const previewToken = "csa128deacffe0b26386090915";
  const livePreviewHost = "eu-rest-preview.contentstack.com";
  const appHost = "eu-app.contentstack.com";
  const mode = "builder";

  ContentstackLivePreview.init({
    ssr: true,
    enable: true,
    stackSdk: {
      apiKey,
      deliveryToken,
      environment,
      region,
      mode,
      live_preview: {
        enable: true,
        preview_token: previewToken,
        host: livePreviewHost,
      },
    },
    stackDetails: {
      apiKey,
      environment,
    },
    clientUrlParams: {
      host: appHost,
    },
    editButton: {
      enable: true,
    },
  });
</script>

<Layout title="Welcome to Astro.">
  <main class="max-w-screen-2xl mx-auto">
    <section class="p-4" id="wrapper">
      {
        page?.title ? (
          <h1 class="text-4xl font-bold mb-4" {...(page?.$ && page?.$.title)}>
            {page?.title}
          </h1>
        ) : null
      }

      {
        page?.description ? (
          <p class="mb-4" {...(page?.$ && page?.$.description)}>
            {page?.description}
          </p>
        ) : null
      }

      {
        page?.image ? (
          <img
            class="mb-4"
            width={500}
            src={page?.image.url}
            alt={page?.image.title}
            {...(page?.image?.$ && page?.image?.$.url)}
          />
        ) : null
      }
      {
        page?.rich_text ? (
          <div {...(page?.$ && page?.$.rich_text)} set:html={page?.rich_text} />
        ) : null
      }

      <div
        class="space-y-8 max-w-screen-sm mt-4"
        {...page?.$ && page?.$.blocks}
      >
        {
          page?.blocks?.map((item: { block: any }, index: number) => {
            const { block } = item;
            const isImageLeft = block.layout === "image_left";

            return (
              <div
                key={block._metadata.uid}
                {...(page?.$ && page?.$[`blocks__${index}`])}
                class={`flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4 ${
                  isImageLeft ? "md:flex-row" : "md:flex-row-reverse"
                }`}
              >
                <div class="w-full md:w-1/2">
                  {block.image ? (
                    <img
                      src={block.image.url}
                      alt={block.image.title}
                      width={200}
                      height={112}
                      class="w-full"
                      {...(block?.$ && block?.$.image)}
                    />
                  ) : null}
                </div>
                <div class="w-full md:w-1/2">
                  {block.title ? (
                    <h2
                      class="text-2xl font-bold"
                      {...(block?.$ && block?.$.title)}
                    >
                      {block.title}
                    </h2>
                  ) : null}
                  {block.copy ? (
                    <div
                      {...(block?.$ && block?.$.copy)}
                      set:html={block?.copy}
                      class="prose"
                    />
                  ) : null}
                </div>
              </div>
            );
          })
        }
      </div>
    </section>
  </main>
</Layout>
